#!/bin/bash

days=30
author=$(git config --get user.name)

function help {
    cat <<EOF
    Usage: $0 [options] [days] [author]

    [days]                          Time period in [days]
    [author]                        Stats for [author]

    -d | --days [days]              Time period in [days].                               default: $days
    -a | --author [author]          Show status for given author.                        default: $author
    -c | --committer [committer]    Show status for given committer, overrides author.

    -h | --help                     Display this text.

EOF
    exit
}

POSITIONAL_ARGS=""

while (("$#")); do
    case "$1" in
    -d | --days)
        [[ $# < 2 ]] && echo "Invalid days" && exit 1
        days=$2
        shift 2
        ;;
    -a | --author)
        [[ $# < 2 ]] && echo "Invalid author" && exit 1
        author="$2"
        shift 2
        ;;

    -c | --committer)
        [[ $# < 2 ]] && echo "Invalid committer" && exit 1
        committer="$2"
        shift 2
        ;;
    -? | -h | --help)
        shift 1
        help
        ;;
    -? | -h | --help)
        shift 1
        help
        ;;
    --) # end argument parsing
        shift
        break
        ;;
    -* | --*=) # unsupported flags
        echo "unknown option: $1" >&2
        help
        exit 1
        ;;
    *) # preserve positional arguments
        POSITIONAL_ARGS="$POSITIONAL_ARGS \"$1\""
        shift
        ;;
    esac
done

# sets positional arguments in their proper place.
# Corrects  $1, $2, $#, $@, to match the positional_args as expected
eval set -- "$POSITIONAL_ARGS"

# Overwrite with positional arguments if they were passed
[[ $# -ge 1 ]] && days=$1
[[ $# -ge 2 ]] && author="$2"


# echo git log --shortstat $who --since="$days days"
# git log --shortstat $who --since="$days days"

if [ -z ${committer+x} ]; then
    echo "Stats for author containing '$author' from the last '$days' days"
    git log --shortstat --author="$author" --since=""$days" days" | grep -E 'fil(e|es) changed' | awk '{files+=$1; inserted+=$4; deleted+=$6; delta+=$4-$6; total+=$4+$6; ratio=deleted/inserted} END {printf "Commit stats:\n- Files changed (total)..  %s\n- Lines added   (total)..  %s\n- Lines deleted (total)..  %s\n- Total lines............  %s\n- Total Delta............  %s\n- Add./Del. ratio (1:n)..  1 : %s\n", files, inserted, deleted, total, delta, ratio }' -
else
    echo "Stats for committer containing '$committer' from the last '$days' days"
    git log --shortstat --committer="$committer" --since=""$days" days" | grep -E 'fil(e|es) changed' | awk '{files+=$1; inserted+=$4; deleted+=$6; delta+=$4-$6; total+=$4+$6; ratio=deleted/inserted} END {printf "Commit stats:\n- Files changed (total)..  %s\n- Lines added   (total)..  %s\n- Lines deleted (total)..  %s\n- Total lines............  %s\n- Total Delta............  %s\n- Add./Del. ratio (1:n)..  1 : %s\n", files, inserted, deleted, total, delta, ratio }' -
fi
