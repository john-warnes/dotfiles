#
# set Zsh as your default Tmux shell
# set-option -g default-shell /bin/zsh
#
# UTF is great, let us use that
#set -g utf8
#set-window-option -g utf8 on

# Tmux should be pretty, we need 256 color for that
#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

#set -g default-terminal "xterm-256color tmux"
#set-option -ga terminal-overrides ",xterm-256color:Tc"

# Tmux uses a 'control key', let's set it to 'Ctrl-a'
# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
# of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1

# Enable mouse
set -g mouse on

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v

# Resize Panes
bind-key -r j resize-pane -D 5
bind-key -r k resize-pane -U 5
bind-key -r h resize-pane -L 5
bind-key -r l resize-pane -R 5


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


set-option -g xterm-keys on
bind-key -n C-Left  send-keys C-Left
bind-key -n C-Right send-keys C-Right
#bind-key -n C-Up    if-shell "$isvim" "select-pane -U" "send-keys C-Up"
#bind-key -n C-Down  if-shell "$isvim" "select-pane -D" "send-keys C-Down"




#
# Setup a resonable theme to begin "powerlineish"
#

set -g status-bg "colour24"
set -g message-command-fg "colour231"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour231"
set -g message-bg "colour31"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour231"
set -g message-command-bg "colour31"
set -g status-attr "none"
#set -g status-utf8 "on"
set -g pane-border-fg "colour31"
set -g status-left-attr "none"
setw -g window-status-fg "colour231"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour24"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour231"
setw -g window-status-separator ""
setw -g window-status-bg "colour24"
set -g status-left "#[fg=colour23,bg=colour231] #S #[fg=colour231,bg=colour24,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour31,bg=colour24,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour31] %Y-%m-%d  %H:%M #[fg=colour231,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour23,bg=colour231] #h "
setw -g window-status-format "#[fg=colour231,bg=colour24] #I #[fg=colour231,bg=colour24] #W "
setw -g window-status-current-format "#[fg=colour24,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour31] #I #[fg=colour231,bg=colour31] #W #[fg=colour31,bg=colour24,nobold,nounderscore,noitalics]"
